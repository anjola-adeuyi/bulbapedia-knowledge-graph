# Query 1: Get Pokemon with their types and physical characteristics
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX pokemon: <http://example.org/pokemon/>
PREFIX schema: <http://schema.org/>

SELECT ?name ?primaryType ?secondaryType ?height ?weight
WHERE {
  ?pokemon rdf:type pokemon:Pokemon ;
           schema:name ?name ;
           pokemon:primaryType ?primaryType ;
           schema:height ?height ;
           schema:weight ?weight .
  OPTIONAL { ?pokemon pokemon:secondaryType ?secondaryType }
}
ORDER BY ?name

# Query 2: Pokemon abilities and their categories
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX pokemon: <http://example.org/pokemon/>
PREFIX schema: <http://schema.org/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?pokemonName ?category ?abilityName
WHERE {
  ?pokemon rdf:type pokemon:Pokemon ;
           schema:name ?pokemonName ;
           pokemon:category ?category ;
           pokemon:primaryAbility ?ability .
  ?ability rdfs:label ?abilityName .
}
ORDER BY ?pokemonName

# Query 3: Complete evolution chains
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX pokemon: <http://example.org/pokemon/>
PREFIX schema: <http://schema.org/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?stage1 ?type1 ?stage2 ?type2 ?stage3 ?type3
WHERE {
  ?p1 schema:name ?stage1 ;
      pokemon:primaryType ?type1 ;
      pokemon:evolutionStage "1"^^xsd:integer .
      
  ?p2 schema:name ?stage2 ;
      pokemon:primaryType ?type2 ;
      pokemon:evolutionStage "2"^^xsd:integer ;
      pokemon:evolvesFrom ?p1 .
      
  ?p3 schema:name ?stage3 ;
      pokemon:primaryType ?type3 ;
      pokemon:evolutionStage "3"^^xsd:integer ;
      pokemon:evolvesFrom ?p2 .
}
ORDER BY ?stage1

# Query 4: Find Pokemon with multi-language labels
PREFIX schema: <http://schema.org/>
PREFIX pokemon: <http://example.org/pokemon/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name (GROUP_CONCAT(?label;separator="|") as ?labels)
WHERE {
  ?pokemon schema:name ?name ;
           rdfs:label ?label .
}
GROUP BY ?name
ORDER BY ?name

# Query 5: Pokemon with their external links
PREFIX schema: <http://schema.org/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT ?name ?dbpedia ?wikidata
WHERE {
  ?pokemon schema:name ?name ;
           owl:sameAs ?dbpedia, ?wikidata .
  FILTER(CONTAINS(STR(?dbpedia), "dbpedia.org"))
  FILTER(CONTAINS(STR(?wikidata), "wikidata.org"))
}
ORDER BY ?name

# Query 6: Find all Pokemon names including those from owl:sameAs links
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX schema: <http://schema.org/>
SELECT DISTINCT ?name ?altName
WHERE {
  ?pokemon schema:name ?name ;
          owl:sameAs* ?same .
  ?same schema:name ?altName .
  FILTER(?name != ?altName)
}
ORDER BY ?name

# Query 7: Get all Pokemon types including inferred ones from subclass relationships
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX pokemon: <http://example.org/pokemon/>
PREFIX schema: <http://schema.org/>
SELECT ?name ?baseType ?inheritedType
WHERE {
  ?pokemon schema:name ?name ;
           pokemon:primaryType ?baseType .
  ?pokemon rdfs:subClassOf* ?parent .
  ?parent pokemon:primaryType ?inheritedType .
  FILTER(?baseType != ?inheritedType)
}
ORDER BY ?name

# Query 8: Find all equivalent Pokemon across different sources
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX schema: <http://schema.org/>
SELECT ?pokemonName ?source ?externalId
WHERE {
  ?pokemon schema:name ?pokemonName ;
          owl:sameAs* ?external .
  BIND(
    IF(CONTAINS(STR(?external), "dbpedia"), "DBpedia",
    IF(CONTAINS(STR(?external), "wikidata"), "Wikidata",
    "Other")) AS ?source)
  BIND(REPLACE(STR(?external), "^.*/([^/]*)$", "$1") AS ?externalId)
}
ORDER BY ?pokemonName ?source

# Query 9: Get evolution chains with inherited properties
PREFIX pokemon: <http://example.org/pokemon/>
PREFIX schema: <http://schema.org/>
SELECT ?baseName ?evolvedName ?commonType
WHERE {
  ?base schema:name ?baseName ;
        pokemon:primaryType ?commonType .
  ?evolved pokemon:evolvesFrom+ ?base ;
           schema:name ?evolvedName ;
           pokemon:primaryType ?commonType .
}
ORDER BY ?baseName ?evolvedName

# Query 10: Find Pokemon with shared characteristics through inference
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX pokemon: <http://example.org/pokemon/>
PREFIX schema: <http://schema.org/>
SELECT ?name1 ?name2 ?sharedProperty ?value
WHERE {
  ?pokemon1 schema:name ?name1 ;
            ?sharedProperty ?value .
  ?pokemon2 schema:name ?name2 ;
            ?sharedProperty ?value .
  ?sharedProperty rdfs:subPropertyOf* pokemon:characteristic .
  FILTER(?pokemon1 != ?pokemon2)
  FILTER(?sharedProperty != schema:name)
}
ORDER BY ?name1 ?name2
